<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blog with AI Chatbox</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        /* Chatbox Styles */
        .chatbox-container {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1000;
        }

        .chatbox-toggle {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            color: white;
            font-size: 24px;
            cursor: pointer;
            box-shadow: 0 4px 20px rgba(0,0,0,0.3);
            transition: all 0.3s ease;
            position: relative;
        }

            .chatbox-toggle:hover {
                transform: scale(1.1);
            }

        .notification-dot {
            position: absolute;
            top: 5px;
            right: 5px;
            width: 12px;
            height: 12px;
            background: #ff4757;
            border-radius: 50%;
            border: 2px solid white;
            animation: pulse 2s infinite;
        }


        .chatbox {
            position: absolute;
            bottom: 80px;
            right: 0;
            width: 380px;
            height: 550px;
            background: white;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.3);
            display: none;
            flex-direction: column;
            overflow: hidden;
        }

            .chatbox.active {
                display: flex;
            }

        .chatbox-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 15px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .chatbox-title {
            font-weight: bold;
            font-size: 16px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .status-indicator {
            width: 8px;
            height: 8px;
            background: #2ecc71;
            border-radius: 50%;
            animation: blink 2s infinite;
        }

        .chatbox-close {
            background: none;
            border: none;
            color: white;
            font-size: 18px;
            cursor: pointer;
            padding: 5px;
            border-radius: 50%;
            transition: background 0.2s;
        }

            .chatbox-close:hover {
                background: rgba(255,255,255,0.2);
            }

        .chatbox-messages {
            flex: 1;
            padding: 15px;
            overflow-y: auto;
            background: #f8f9fa;
        }

        .message {
            margin-bottom: 15px;
            max-width: 85%;
            animation: fadeIn 0.3s ease;
        }


        .message.user {
            margin-left: auto;
        }

        .message.bot {
            margin-right: auto;
        }

        .message-content {
            padding: 12px 16px;
            border-radius: 18px;
            font-size: 14px;
            line-height: 1.5;
            word-wrap: break-word;
        }

        .message.user .message-content {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .message.bot .message-content {
            background: white;
            border: 1px solid #e9ecef;
            color: #333;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }

        .chatbox-input {
            display: flex;
            padding: 15px;
            background: white;
            border-top: 1px solid #e9ecef;
            gap: 10px;
        }

            .chatbox-input input {
                flex: 1;
                padding: 12px 16px;
                border: 1px solid #e9ecef;
                border-radius: 25px;
                outline: none;
                font-size: 14px;
                transition: border-color 0.2s;
            }

                .chatbox-input input:focus {
                    border-color: #667eea;
                }

            .chatbox-input button {
                padding: 12px 16px;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                border: none;
                border-radius: 25px;
                color: white;
                cursor: pointer;
                font-size: 14px;
                transition: all 0.2s;
                min-width: 50px;
            }

                .chatbox-input button:hover:not(:disabled) {
                    transform: scale(1.05);
                }

                .chatbox-input button:disabled {
                    opacity: 0.6;
                    cursor: not-allowed;
                    transform: none;
                }

        .typing-indicator {
            display: none;
            padding: 12px 16px;
            background: white;
            border: 1px solid #e9ecef;
            border-radius: 18px;
            margin-bottom: 15px;
            color: #666;
            font-style: italic;
            font-size: 14px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }

            .typing-indicator.active {
                display: block;
                animation: fadeIn 0.3s ease;
            }

        .typing-dots {
            display: inline-flex;
            gap: 3px;
            margin-left: 5px;
        }

            .typing-dots span {
                width: 6px;
                height: 6px;
                background: #667eea;
                border-radius: 50%;
                animation: typing 1.4s infinite ease-in-out;
            }

                .typing-dots span:nth-child(1) {
                    animation-delay: -0.32s;
                }

                .typing-dots span:nth-child(2) {
                    animation-delay: -0.16s;
                }



        .quick-actions {
            padding: 10px 15px;
            background: white;
            border-top: 1px solid #e9ecef;
            display: flex;
            gap: 8px;
            flex-wrap: wrap;
        }

        .quick-action {
            padding: 6px 12px;
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 15px;
            font-size: 12px;
            cursor: pointer;
            transition: all 0.2s;
            color: #666;
        }

            .quick-action:hover {
                background: #667eea;
                color: white;
                border-color: #667eea;
            }
    </style>
</head>
<body>
    <!-- AI Chatbox -->
    <div class="chatbox-container">
        <button class="chatbox-toggle" onclick="toggleChatbox()">
            <i class="fas fa-robot"></i>
            <div class="notification-dot" id="notificationDot" style="display: none;"></div>
        </button>

        <div class="chatbox" id="chatbox">
            <div class="chatbox-header">
                <div class="chatbox-title">
                    <i class="fas fa-robot"></i>
                    <span>AI Assistant</span>
                    <div class="status-indicator"></div>
                </div>
                <button class="chatbox-close" onclick="toggleChatbox()">
                    <i class="fas fa-times"></i>
                </button>
            </div>

            <div class="chatbox-messages" id="chatMessages">
                <div class="message bot">
                    <div class="message-content">
                        Xin chào! Tôi là trợ lý AI của bạn. Tôi có thể giúp bạn trả lời các câu hỏi, thảo luận về nhiều chủ đề khác nhau, hay chỉ đơn giản là trò chuyện. Bạn cần hỗ trợ gì hôm nay?
                    </div>
                </div>
            </div>

            <div class="typing-indicator" id="typingIndicator">
                AI đang trả lời
                <div class="typing-dots">
                    <span></span>
                    <span></span>
                    <span></span>
                </div>
            </div>

            <div class="quick-actions">
                <div class="quick-action" onclick="sendQuickMessage('Giúp tôi')">💡 Giúp tôi</div>
                <div class="quick-action" onclick="sendQuickMessage('Hỏi về blog')">📝 Về blog</div>
                <div class="quick-action" onclick="sendQuickMessage('Câu hỏi khác')">❓ Câu hỏi khác</div>
            </div>

            <div class="chatbox-input">
                <input type="text" id="messageInput" placeholder="Nhập câu hỏi của bạn..." onkeypress="handleKeyPress(event)">
                <button onclick="sendMessage()" id="sendButton">
                    <i class="fas fa-paper-plane"></i>
                </button>
            </div>
        </div>
    </div>

    <script>
                let chatboxOpen = false;
                let conversationHistory = [];
                let currentPageContent = null;
                let pageType = 'unknown';

                function toggleChatbox() {
                    const chatbox = document.getElementById('chatbox');
                    const notificationDot = document.getElementById('notificationDot');
                    chatboxOpen = !chatboxOpen;

                    if (chatboxOpen) {
                        chatbox.classList.add('active');
                        document.getElementById('messageInput').focus();
                        notificationDot.style.display = 'none';
                    } else {
                        chatbox.classList.remove('active');
                    }
                }

                function handleKeyPress(event) {
                    if (event.key === 'Enter' && !event.shiftKey) {
                        event.preventDefault();
                        sendMessage();
                    }
                }

                function sendQuickMessage(message) {
                    document.getElementById('messageInput').value = message;
                    sendMessage();
                }

                async function sendMessage() {
                    const messageInput = document.getElementById('messageInput');
                    const message = messageInput.value.trim();

                    if (!message) return;

                    // Add user message
                    addMessage(message, 'user');
                    conversationHistory.push({role: 'user', content: message});
                    messageInput.value = '';

                    // Show typing indicator
                    showTypingIndicator();

                    // Disable send button
                    document.getElementById('sendButton').disabled = true;

                    try {
                        // Get AI response
                        const response = await getAIResponse(message);
                        hideTypingIndicator();
                        addMessage(response, 'bot');
                        conversationHistory.push({role: 'assistant', content: response});

                        // Show notification if chatbox is closed
                        if (!chatboxOpen) {
                            document.getElementById('notificationDot').style.display = 'block';
                        }
                    } catch (error) {
                        hideTypingIndicator();
                        addMessage('Xin lỗi, tôi gặp sự cố kỹ thuật. Vui lòng thử lại sau.', 'bot');
                    }

                    // Re-enable send button
                    document.getElementById('sendButton').disabled = false;
                }

                function addMessage(content, sender) {
                    const messagesContainer = document.getElementById('chatMessages');
                    const messageDiv = document.createElement('div');
                    messageDiv.className = `message ${sender}`;

                    const contentDiv = document.createElement('div');
                    contentDiv.className = 'message-content';
                    contentDiv.innerHTML = formatMessage(content);

                    messageDiv.appendChild(contentDiv);
                    messagesContainer.appendChild(messageDiv);

                    // Scroll to bottom
                    messagesContainer.scrollTop = messagesContainer.scrollHeight;
                }

                function formatMessage(content) {
                    // Convert line breaks to <br> tags
                    return content.replace(/\n/g, '<br>');
                }

                function showTypingIndicator() {
                    document.getElementById('typingIndicator').classList.add('active');
                    const messagesContainer = document.getElementById('chatMessages');
                    messagesContainer.scrollTop = messagesContainer.scrollHeight;
                }

                function hideTypingIndicator() {
                    document.getElementById('typingIndicator').classList.remove('active');
                }

                // Enhanced AI response function
                async function getAIResponse(message) {
                    // Simulate realistic typing time
                    const typingTime = 1500 + Math.random() * 2000;
                    await new Promise(resolve => setTimeout(resolve, typingTime));

                    const lowerMessage = message.toLowerCase();

                    // Greeting responses
                    if (lowerMessage.match(/^(xin chào|chào|hello|hi|hey)$/)) {
                        const greetings = [
                            "Xin chào! Rất vui được trò chuyện với bạn. Hôm nay bạn muốn trao đổi về chủ đề gì?",
                            "Chào bạn! Tôi sẵn sàng giúp đỡ bạn với bất kỳ câu hỏi nào. Bạn cần hỗ trợ gì?",
                            "Hi! Tôi là trợ lý AI và có thể thảo luận về nhiều chủ đề khác nhau. Bạn quan tâm đến điều gì?"
                        ];
                        return greetings[Math.floor(Math.random() * greetings.length)];
                    }

                    // Help and support
                    if (lowerMessage.includes('giúp') || lowerMessage.includes('help') || lowerMessage.includes('hỗ trợ')) {
                        return `Tôi có thể giúp bạn trong nhiều việc khác nhau:

        📝 **Về blog**: Giải thích nội dung, tóm tắt bài viết, thảo luận về chủ đề
        🤔 **Trả lời câu hỏi**: Về kiến thức tổng quát, giải thích khái niệm
        💡 **Tư vấn**: Đưa ra gợi ý và lời khuyên
        🗨️ **Trò chuyện**: Thảo luận về sở thích, ý kiến cá nhân

        Bạn có câu hỏi cụ thể nào không? Cứ tự nhiên hỏi tôi nhé!`;
                    }

                    // Blog-related questions
                    if (lowerMessage.includes('blog') || lowerMessage.includes('bài viết') || lowerMessage.includes('article')) {
                        if (lowerMessage.includes('hoa quả sạch') || lowerMessage.includes('hoa qua sach')) {
                            return `Về bài viết "Hoa quả sạch" mà bạn hỏi:

        🍎 **Nội dung chính**: Bài viết có thể bàn về cách chọn lựa hoa quả an toàn, nguồn gốc xuất xứ, và phương pháp bảo quản
        🌱 **Lợi ích**: Tác động tích cực đến sức khỏe, an toàn thực phẩm
        🛒 **Hướng dẫn**: Cách nhận biết hoa quả sạch và nơi mua uy tín

        Bạn có muốn tôi giải thích chi tiết về khía cạnh nào không? Hay bạn quan tâm đến loại hoa quả cụ thể nào?`;
                        }

                        return `Về blog này, tôi có thể giúp bạn:

        📖 **Tóm tắt nội dung**: Giải thích các bài viết một cách dễ hiểu
        🔍 **Tìm kiếm thông tin**: Hỗ trợ tìm bài viết theo chủ đề
        💬 **Thảo luận**: Chia sẻ quan điểm về các chủ đề được đề cập
        📝 **Giải đáp**: Trả lời câu hỏi liên quan đến nội dung

        Bạn quan tâm đến bài viết nào cụ thể? Hoặc chủ đề gì bạn muốn tìm hiểu?`;
                    }

                    // Thank you responses
                    if (lowerMessage.includes('cảm ơn') || lowerMessage.includes('thanks') || lowerMessage.includes('thank you')) {
                        const thanks = [
                            "Không có gì! Tôi rất vui được giúp đỡ bạn. Còn câu hỏi nào khác không?",
                            "Rất vui được hỗ trợ! Nếu cần thêm thông tin gì, cứ hỏi tôi nhé.",
                            "Bạn quá khách sáo! Tôi luôn sẵn sàng giúp đỡ bạn bất cứ lúc nào."
                        ];
                        return thanks[Math.floor(Math.random() * thanks.length)];
                    }

                    // Goodbye responses
                    if (lowerMessage.match(/(tạm biệt|bye|goodbye|chào tạm biệt)/)) {
                        return "Tạm biệt! Rất vui được trò chuyện với bạn. Hẹn gặp lại sau nhé! 👋";
                    }

                    // How are you responses
                    if (lowerMessage.includes('khỏe không') || lowerMessage.includes('thế nào') || lowerMessage.includes('how are you')) {
                        return "Tôi hoạt động tốt và sẵn sàng hỗ trợ bạn! Cảm ơn bạn đã quan tâm. Còn bạn thì sao? Hôm nay có điều gì thú vị không?";
                    }

                    // General knowledge questions
                    if (lowerMessage.includes('là gì') || lowerMessage.includes('what is') || lowerMessage.includes('định nghĩa')) {
                        return `Đây là một câu hỏi hay! Về "${message}", tôi hiểu bạn muốn tìm hiểu thêm.

        Tuy nhiên, để đưa ra câu trả lời chính xác và hữu ích nhất, bạn có thể cung cấp thêm context không? Ví dụ:
        - Bạn đang tìm hiểu trong lĩnh vực nào?
        - Có khía cạnh cụ thể nào bạn quan tâm?

        Điều này giúp tôi đưa ra thông tin phù hợp với nhu cầu của bạn.`;
                    }

                    // Questions about specific topics
                    if (lowerMessage.includes('tại sao') || lowerMessage.includes('why') || lowerMessage.includes('vì sao')) {
                        return `Câu hỏi "${message}" rất thú vị!

        Đây là loại câu hỏi cần phân tích kỹ lưỡng. Tôi có thể giúp bạn tìm hiểu từ nhiều góc độ khác nhau:

        🔍 **Nguyên nhân**: Các yếu tố dẫn đến vấn đề
        📊 **Phân tích**: Xem xét từ nhiều khía cạnh
        💡 **Giải thích**: Làm rõ cơ chế hoạt động
        🎯 **Kết luận**: Đưa ra quan điểm tổng hợp

        Bạn muốn tôi tập trung vào khía cạnh nào nhất?`;
                    }

                    // Default intelligent response
                    const topics = extractTopics(message);
                    return generateContextualResponse(message, topics);
                }

                function extractTopics(message) {
                    const topicKeywords = {
                        'công nghệ': ['công nghệ', 'technology', 'AI', 'máy tính', 'internet', 'app', 'phần mềm'],
                        'sức khỏe': ['sức khỏe', 'health', 'bệnh', 'thuốc', 'tập thể dục', 'ăn uống'],
                        'giáo dục': ['học', 'giáo dục', 'trường', 'sinh viên', 'kiến thức'],
                        'kinh tế': ['tiền', 'kinh tế', 'đầu tư', 'kinh doanh', 'công việc'],
                        'du lịch': ['du lịch', 'travel', 'địa điểm', 'tour', 'vacation'],
                        'ẩm thực': ['món ăn', 'nấu ăn', 'food', 'recipe', 'nhà hàng'],
                        'thể thao': ['bóng đá', 'thể thao', 'sport', 'gym', 'fitness']
                    };

                    const foundTopics = [];
                    for (const [topic, keywords] of Object.entries(topicKeywords)) {
                        if (keywords.some(keyword => message.toLowerCase().includes(keyword))) {
                            foundTopics.push(topic);
                        }
                    }
                    return foundTopics;
                }

                function generateContextualResponse(message, topics) {
                    if (topics.length > 0) {
                        const topic = topics[0];
                        return `Tôi thấy bạn quan tâm đến chủ đề **${topic}**!

        Về câu hỏi "${message}" của bạn - đây là một chủ đề thú vị và có nhiều khía cạnh để thảo luận.

        Tôi có thể chia sẻ thêm thông tin chi tiết nếu bạn muốn:
        • Các khái niệm cơ bản
        • Xu hướng hiện tại
        • Lời khuyên thực tế
        • Kinh nghiệm thực tế

        Bạn muốn tìm hiểu sâu hơn về khía cạnh nào? Hoặc có câu hỏi cụ thể nào khác?`;
                    }

                    // Completely generic but intelligent response
                    return `Cảm ơn bạn đã chia sẻ về "${message}"!

        Đây là một chủ đề mà tôi có thể thảo luận cùng bạn. Mỗi vấn đề đều có những góc nhìn khác nhau và tôi luôn sẵn sàng lắng nghe quan điểm của bạn.

        🤔 **Bạn có thể kể thêm**: Điều gì khiến bạn quan tâm đến vấn đề này?
        💭 **Hoặc tôi có thể**: Đưa ra một số góc nhìn và thông tin liên quan
        🗨️ **Chúng ta cũng có thể**: Thảo luận tự do về chủ đề này

        Bạn muốn tiếp tục theo hướng nào?`;
                }

    </script>
</body>
</html>